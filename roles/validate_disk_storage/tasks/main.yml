---
- name: Gather only hardware facts
  cisco.ios.ios_facts:
    gather_subset:
      - hardware

- name: Gather CPU usage and free memory
  ios_command:
    commands:
      - "show processes cpu"
  register: output

- name: Assert that IOS device has free memory
  assert:
    that:
      - "'ios' == ansible_net_system"
      - 1000 < ansible_net_memfree_mb | default('1001') | int
    success_msg: Device is in healthy state.
    fail_msg: Device should be manually verified.
  when: ansible_net_memfree_mb is defined

- name: Assert that IOS device has optimal CPU percentage
  assert:
    that:
      - 85 > "item.split()[-1] | replace('%', '')" | int
    success_msg: Device is in healthy state.
    fail_msg: Device should be manually verified.
  loop: "{{ output['stdout'][0] | regex_replace('\n', '|') | split('|') }}"
  when: "'five minutes:' in item"

- block: 
  - name: Preparing Prechecks file variable...
    debug:
      msg: "prechecks_{{ inventory_hostname }}"
    register: temp

  - name: Preparing Prechecks file variable....
    debug:
      msg: "{{ temp.msg | replace('-', '_') }}"
    register: file

  - name: Setting fact for device variable
    set_fact:  
      file_name="{{ file.msg }}"

  - debug: 
      msg: "{{ lookup('vars', file_name) }}"
    register: file_content
    
  - debug:
      var: "file_content"

- block: 
  - name: Creates backup directory
    file:
      path: "prechecks"
      state: directory
    run_once: true

  - name: Check directory stats
    stat:
      path: "prechecks"
    register: dir

  - name: Remove existing file if it exists
    file:
      path: "prechecks/{{file_name}}.txt"
      state: absent
    when: dir.stat.exists and dir.stat.isdir

  - name: Creates file
    file:
      path: "prechecks/{{file_name}}.txt"
      state: touch
    when: dir.stat.exists and dir.stat.isdir
    register: file_path

- name: Write precheck contents to the file
  copy:
    content: "{{ file_content.msg }}"
    dest: "prechecks/{{file_name}}"
  
- name: View file contents
  shell: "cat prechecks/{{file_name}}"
  register: cat_output
- debug: var=cat_output