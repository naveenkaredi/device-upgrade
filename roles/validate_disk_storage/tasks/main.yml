---
- name: Fetch volume names
  include_role:
    name: utils/volume_names

- name: Assign primary flash name to artifacts
  ansible.builtin.set_stats:
    data:
      device_primary_flash: "{{device_primary_flash}}"

- block: 
  - name: Assign secondary flash name to artifacts
    ansible.builtin.set_stats:
      data:
        device_secondary_flash: "{{device_secondary_flash}}"

  - name: Gather only hardware facts
    cisco.ios.ios_facts:
      gather_subset:
        - hardware

  - name: Check free memory in secondary flash
    ios_command:
      commands:
        - "dir {{ device_secondary_flash }}: | in free"
    register: seconday_flash_space_output

  - name: Intermediate processing...
    set_fact: free_string={{ seconday_flash_space_output['stdout'][0][seconday_flash_space_output['stdout'][0].find('(')+1:] }}

  - name: Intermediate processing...
    set_fact: secondary_flash_memfree={{ free_string[:free_string.find(' ')] }}

  - name: Intermediate processing...
    set_fact: secondary_flash_memfree_mb={{ secondary_flash_memfree | int / 1000000 }}

  - debug: var="secondary_flash_memfree_mb"

  - name: Assert that IOS device has free memory in secondary memory
    assert:
      that:
        - "'ios' == ansible_net_system"
        - 1000 < secondary_flash_memfree_mb | default('1001') | int
      success_msg: Device is in healthy state.
      fail_msg: Device should be manually verified.
  when: device_secondary_flash is defined
